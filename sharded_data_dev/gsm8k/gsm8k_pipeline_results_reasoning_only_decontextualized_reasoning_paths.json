[
  {
    "example_id": "gsm8k_train_5238",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 5,
      "edges": 4,
      "constraint_ratio": 1.0,
      "source_nodes": 2,
      "sink_nodes": 1,
      "source_sink_pairs": 2,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 6,
    "paths": [
      {
        "sequence": [
          "s3",
          "s4",
          "s1",
          "s2",
          "s5"
        ],
        "texts": [
          "The family collected 20 kilograms of newspapers, and 20 \u00f7 5 = 4 sets of 5 kilograms",
          "The family receives $1.50 for each set of 5 kilograms, so 4 sets \u00d7 $1.50 = $6",
          "The family collected 144 cans, and 144 \u00f7 12 = 12 sets of 12 cans",
          "The family receives $0.50 for each set of 12 cans, so 12 sets \u00d7 $0.50 = $6",
          "The total amount of money is $6 (from cans) + $6 (from newspapers) = $12"
        ]
      },
      {
        "sequence": [
          "s3",
          "s1",
          "s2",
          "s4",
          "s5"
        ],
        "texts": [
          "The family collected 20 kilograms of newspapers, and 20 \u00f7 5 = 4 sets of 5 kilograms",
          "The family collected 144 cans, and 144 \u00f7 12 = 12 sets of 12 cans",
          "The family receives $0.50 for each set of 12 cans, so 12 sets \u00d7 $0.50 = $6",
          "The family receives $1.50 for each set of 5 kilograms, so 4 sets \u00d7 $1.50 = $6",
          "The total amount of money is $6 (from cans) + $6 (from newspapers) = $12"
        ]
      },
      {
        "sequence": [
          "s3",
          "s1",
          "s4",
          "s2",
          "s5"
        ],
        "texts": [
          "The family collected 20 kilograms of newspapers, and 20 \u00f7 5 = 4 sets of 5 kilograms",
          "The family collected 144 cans, and 144 \u00f7 12 = 12 sets of 12 cans",
          "The family receives $1.50 for each set of 5 kilograms, so 4 sets \u00d7 $1.50 = $6",
          "The family receives $0.50 for each set of 12 cans, so 12 sets \u00d7 $0.50 = $6",
          "The total amount of money is $6 (from cans) + $6 (from newspapers) = $12"
        ]
      },
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s4",
          "s5"
        ],
        "texts": [
          "The family collected 144 cans, and 144 \u00f7 12 = 12 sets of 12 cans",
          "The family receives $0.50 for each set of 12 cans, so 12 sets \u00d7 $0.50 = $6",
          "The family collected 20 kilograms of newspapers, and 20 \u00f7 5 = 4 sets of 5 kilograms",
          "The family receives $1.50 for each set of 5 kilograms, so 4 sets \u00d7 $1.50 = $6",
          "The total amount of money is $6 (from cans) + $6 (from newspapers) = $12"
        ]
      },
      {
        "sequence": [
          "s1",
          "s3",
          "s4",
          "s2",
          "s5"
        ],
        "texts": [
          "The family collected 144 cans, and 144 \u00f7 12 = 12 sets of 12 cans",
          "The family collected 20 kilograms of newspapers, and 20 \u00f7 5 = 4 sets of 5 kilograms",
          "The family receives $1.50 for each set of 5 kilograms, so 4 sets \u00d7 $1.50 = $6",
          "The family receives $0.50 for each set of 12 cans, so 12 sets \u00d7 $0.50 = $6",
          "The total amount of money is $6 (from cans) + $6 (from newspapers) = $12"
        ]
      },
      {
        "sequence": [
          "s1",
          "s3",
          "s2",
          "s4",
          "s5"
        ],
        "texts": [
          "The family collected 144 cans, and 144 \u00f7 12 = 12 sets of 12 cans",
          "The family collected 20 kilograms of newspapers, and 20 \u00f7 5 = 4 sets of 5 kilograms",
          "The family receives $0.50 for each set of 12 cans, so 12 sets \u00d7 $0.50 = $6",
          "The family receives $1.50 for each set of 5 kilograms, so 4 sets \u00d7 $1.50 = $6",
          "The total amount of money is $6 (from cans) + $6 (from newspapers) = $12"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_912",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 5,
      "edges": 5,
      "constraint_ratio": 1.25,
      "source_nodes": 1,
      "sink_nodes": 1,
      "source_sink_pairs": 1,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 1,
    "paths": [
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s4",
          "s5"
        ],
        "texts": [
          "Matthew picked 16 + 20 = 36 strawberries",
          "Natalie picked 36/2 = 18 strawberries",
          "Total strawberries is 16 + 36 + 18 = 70 strawberries",
          "They can make 70/7 = 10 jars of jam",
          "They earned 10 \u00d7 $4 = $40 from selling the jam"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_204",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 2,
      "edges": 1,
      "constraint_ratio": 1.0,
      "source_nodes": 1,
      "sink_nodes": 1,
      "source_sink_pairs": 1,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 1,
    "paths": [
      {
        "sequence": [
          "s1",
          "s2"
        ],
        "texts": [
          "The total number of pages is 80 pages/inch \u00d7 12 inches = 960 pages",
          "The average number of pages per book is 960 pages \u00f7 6 books = 160 pages/book"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_6074",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 4,
      "edges": 3,
      "constraint_ratio": 1.0,
      "source_nodes": 1,
      "sink_nodes": 1,
      "source_sink_pairs": 1,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 1,
    "paths": [
      {
        "sequence": [
          "s2",
          "s3",
          "s4",
          "s5"
        ],
        "texts": [
          "James uses half of his Legos: 500 / 2 = 250",
          "The number of Legos remaining after use is 500 - 250 = 250",
          "James is missing 5 pieces, so he puts back 250 - 5 = 245 Legos",
          "The total number of Legos in the box at the end is 245"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_2253",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 2,
      "edges": 1,
      "constraint_ratio": 1.0,
      "source_nodes": 1,
      "sink_nodes": 1,
      "source_sink_pairs": 1,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 1,
    "paths": [
      {
        "sequence": [
          "s1",
          "s2"
        ],
        "texts": [
          "Ines spent 3 pounds * $2 per pound = $6 on the peaches",
          "Ines has $20 - $6 = $14 left"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_2006",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 5,
      "edges": 4,
      "constraint_ratio": 1.0,
      "source_nodes": 1,
      "sink_nodes": 1,
      "source_sink_pairs": 1,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 1,
    "paths": [
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s4",
          "s5"
        ],
        "texts": [
          "In year 2, the fee is 80 + 10 = 90",
          "In year 3, the fee is 90 + 10 = 100",
          "In year 4, the fee is 100 + 10 = 110",
          "In year 5, the fee is 110 + 10 = 120",
          "In year 6, the fee is 120 + 10 = 130"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_1828",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 8,
      "edges": 7,
      "constraint_ratio": 1.0,
      "source_nodes": 2,
      "sink_nodes": 1,
      "source_sink_pairs": 2,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 5,
    "paths": [
      {
        "sequence": [
          "s5",
          "s1",
          "s2",
          "s3",
          "s4",
          "s6",
          "s7",
          "s8"
        ],
        "texts": [
          "The total amount deposited in the second year is 100 * 12 = 1200",
          "The total amount deposited in one year is 100 * 12 = 1200",
          "The total amount invested after the first year is 1000 + 1200 = 2200",
          "The interest earned on the total amount of 2200 is 2200 * 0.10 = 220",
          "The total amount at the end of the first year is 2200 + 220 = 2420",
          "The total amount invested at the beginning of the second year is 2420 + 1200 = 3620",
          "The interest earned during the second year on 3620 is 3620 * 0.10 = 362",
          "The total amount at the end of the second year is 3620 + 362 = 3982"
        ]
      },
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s4",
          "s5",
          "s6",
          "s7",
          "s8"
        ],
        "texts": [
          "The total amount deposited in one year is 100 * 12 = 1200",
          "The total amount invested after the first year is 1000 + 1200 = 2200",
          "The interest earned on the total amount of 2200 is 2200 * 0.10 = 220",
          "The total amount at the end of the first year is 2200 + 220 = 2420",
          "The total amount deposited in the second year is 100 * 12 = 1200",
          "The total amount invested at the beginning of the second year is 2420 + 1200 = 3620",
          "The interest earned during the second year on 3620 is 3620 * 0.10 = 362",
          "The total amount at the end of the second year is 3620 + 362 = 3982"
        ]
      },
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s5",
          "s4",
          "s6",
          "s7",
          "s8"
        ],
        "texts": [
          "The total amount deposited in one year is 100 * 12 = 1200",
          "The total amount invested after the first year is 1000 + 1200 = 2200",
          "The interest earned on the total amount of 2200 is 2200 * 0.10 = 220",
          "The total amount deposited in the second year is 100 * 12 = 1200",
          "The total amount at the end of the first year is 2200 + 220 = 2420",
          "The total amount invested at the beginning of the second year is 2420 + 1200 = 3620",
          "The interest earned during the second year on 3620 is 3620 * 0.10 = 362",
          "The total amount at the end of the second year is 3620 + 362 = 3982"
        ]
      },
      {
        "sequence": [
          "s1",
          "s2",
          "s5",
          "s3",
          "s4",
          "s6",
          "s7",
          "s8"
        ],
        "texts": [
          "The total amount deposited in one year is 100 * 12 = 1200",
          "The total amount invested after the first year is 1000 + 1200 = 2200",
          "The total amount deposited in the second year is 100 * 12 = 1200",
          "The interest earned on the total amount of 2200 is 2200 * 0.10 = 220",
          "The total amount at the end of the first year is 2200 + 220 = 2420",
          "The total amount invested at the beginning of the second year is 2420 + 1200 = 3620",
          "The interest earned during the second year on 3620 is 3620 * 0.10 = 362",
          "The total amount at the end of the second year is 3620 + 362 = 3982"
        ]
      },
      {
        "sequence": [
          "s1",
          "s5",
          "s2",
          "s3",
          "s4",
          "s6",
          "s7",
          "s8"
        ],
        "texts": [
          "The total amount deposited in one year is 100 * 12 = 1200",
          "The total amount deposited in the second year is 100 * 12 = 1200",
          "The total amount invested after the first year is 1000 + 1200 = 2200",
          "The interest earned on the total amount of 2200 is 2200 * 0.10 = 220",
          "The total amount at the end of the first year is 2200 + 220 = 2420",
          "The total amount invested at the beginning of the second year is 2420 + 1200 = 3620",
          "The interest earned during the second year on 3620 is 3620 * 0.10 = 362",
          "The total amount at the end of the second year is 3620 + 362 = 3982"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_1143",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 4,
      "edges": 3,
      "constraint_ratio": 1.0,
      "source_nodes": 2,
      "sink_nodes": 1,
      "source_sink_pairs": 2,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 2,
    "paths": [
      {
        "sequence": [
          "s2",
          "s1",
          "s3",
          "s4"
        ],
        "texts": [
          "Kendra bought 3 hats, with each hat costing $10, so the total cost for the hats is 3 * 10 = 30 dollars",
          "Kendra bought 2 toys, and each wooden toy costs $20, so the total cost for the wooden toys is 2 * 20 = 40 dollars",
          "The overall amount Kendra spent is 40 dollars (toys) + 30 dollars (hats) = 70 dollars",
          "Kendra went to the shop with a $100 bill, so the change she received is 100 dollars - 70 dollars = 30 dollars"
        ]
      },
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s4"
        ],
        "texts": [
          "Kendra bought 2 toys, and each wooden toy costs $20, so the total cost for the wooden toys is 2 * 20 = 40 dollars",
          "Kendra bought 3 hats, with each hat costing $10, so the total cost for the hats is 3 * 10 = 30 dollars",
          "The overall amount Kendra spent is 40 dollars (toys) + 30 dollars (hats) = 70 dollars",
          "Kendra went to the shop with a $100 bill, so the change she received is 100 dollars - 70 dollars = 30 dollars"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_6033",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 4,
      "edges": 3,
      "constraint_ratio": 1.0,
      "source_nodes": 1,
      "sink_nodes": 1,
      "source_sink_pairs": 1,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 1,
    "paths": [
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s4"
        ],
        "texts": [
          "25% of 16 cm = 0.25 * 16 cm = 4 cm",
          "Second generation's tail length = 16 cm + 4 cm = 20 cm",
          "25% of 20 cm = 0.25 * 20 cm = 5 cm",
          "Third generation's tail length = 20 cm + 5 cm = 25 cm"
        ]
      }
    ]
  },
  {
    "example_id": "gsm8k_train_839",
    "complexity_estimate": {
      "complexity": "MEDIUM",
      "estimated_paths": "10\u20131,000",
      "nodes": 6,
      "edges": 5,
      "constraint_ratio": 1.0,
      "source_nodes": 4,
      "sink_nodes": 1,
      "source_sink_pairs": 4,
      "use_sampling": false
    },
    "method": "exhaustive",
    "total_paths": 24,
    "paths": [
      {
        "sequence": [
          "s4",
          "s3",
          "s2",
          "s1",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s4",
          "s3",
          "s1",
          "s2",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s4",
          "s2",
          "s1",
          "s3",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s4",
          "s2",
          "s3",
          "s1",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s4",
          "s1",
          "s3",
          "s2",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s4",
          "s1",
          "s2",
          "s3",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s3",
          "s2",
          "s1",
          "s4",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s3",
          "s2",
          "s4",
          "s1",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s3",
          "s1",
          "s4",
          "s2",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s3",
          "s1",
          "s2",
          "s4",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s3",
          "s4",
          "s2",
          "s1",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s3",
          "s4",
          "s1",
          "s2",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s2",
          "s1",
          "s4",
          "s3",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s2",
          "s1",
          "s3",
          "s4",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s2",
          "s4",
          "s3",
          "s1",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s2",
          "s4",
          "s1",
          "s3",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s2",
          "s3",
          "s1",
          "s4",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s2",
          "s3",
          "s4",
          "s1",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s1",
          "s4",
          "s3",
          "s2",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s1",
          "s4",
          "s2",
          "s3",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s1",
          "s3",
          "s2",
          "s4",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s1",
          "s3",
          "s4",
          "s2",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s1",
          "s2",
          "s4",
          "s3",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      },
      {
        "sequence": [
          "s1",
          "s2",
          "s3",
          "s4",
          "s5",
          "s6"
        ],
        "texts": [
          "The total number of omelets needed for small children is 0.5 * 53 = 26.5 omelets",
          "The total number of omelets needed for older children is 1 * 35 = 35 omelets",
          "The total number of omelets needed for adults is 2 * 75 = 150 omelets",
          "The total number of omelets needed for seniors is 1.5 * 37 = 55.5 omelets",
          "The total omelets needed is 26.5 + 35 + 150 + 55.5 + 25 = 292 omelets",
          "The total number of eggs needed is 2 * 292 = 584 eggs"
        ]
      }
    ]
  }
]